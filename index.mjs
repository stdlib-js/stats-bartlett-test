// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-group@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";var j=function(t){var s,e,i,r,n,a;for(s=0,e=0,r=0,i=t.length,n=0;n<i;n++)r+=(s=(a=t[n])-e)*(a-(e+=s/(n+1)));return r/(n-1)},f=l,c=p.isPrimitive,v=s,b=d,w=m,y=r;var x=function(t,s){return v(s)?w(s,"alpha")&&(t.alpha=s.alpha,!c(t.alpha)||b(t.alpha))?new TypeError(y("invalid option. `%s` option must be a number. Option: `%s`.","alpha",t.alpha)):w(s,"groups")&&(t.groups=s.groups,!f(t.groups))?new TypeError(y("invalid option. `%s` option must be an array. Option: `%s`.","groups",t.groups)):null:new TypeError(y("invalid argument. Options argument must be an object. Value: `%s`.",s))},E=h,T=s,V=u.isPrimitive,O=m,q=r,k=g;var F=t,P=s,R=e,A=i,B=r,D=n,M=a,N=o,S=j,z=x,C=function(t){var s,e,i;if(e=4,s=!0,arguments.length>0){if(!T(t))throw new TypeError(q("invalid argument. First argument must be an options object. Value: `%s`.",t));if(O(t,"digits")){if(!E(t.digits))throw new TypeError(q("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",t.digits));e=t.digits}if(O(t,"decision")){if(!V(t.decision))throw new TypeError(q("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",t.decision));s=t.decision}}return i="",i+=this.method,i+="\n\n",i+="Null hypothesis: The variances in all groups are the same.",i+="\n\n",i+="    pValue: "+k(this.pValue,-e)+"\n",i+="    statistic: "+k(this.statistic,-e)+"\n",i+="    df: "+k(this.df,-e),i+="\n\n",s&&(i+="Test Decision: ",this.rejected?i+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":i+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",i+="\n"),i};var G=function(){var t,s,e,i,r,n,a,o,l,p,d,m,h,u,g,j,f,c,v,b;if(l=[],p={},P(arguments[(s=arguments.length)-1])&&(t=arguments[s-1],s-=1,u=z(p,t)))throw u;if(p.groups){if(r=M(arguments[0],p.groups),(s=(i=A(r)).length)<2)throw new Error(B("invalid number of groups. `%s` array must contain at least two unique elements. Value: `%s`.","groups",i));for(b=0;b<s;b++)l.push(r[i[b]])}else for(b=0;b<s;b++)l.push(arguments[b]);for(a=0,e=0,o=0,g=0,v=(c=new Array(s)).slice(),b=0;b<s;b++){if(h=l[b],!F(h))throw new TypeError(B("invalid argument. Must provide array-like arguments. Value: `%s`.",h));if(0===h.length)throw new Error(B("invalid argument. Supplied arrays cannot be empty. Value: `%s`.",h));c[b]=h.length-1,a+=c[b],e+=1/c[b],v[b]=S(h),o+=c[b]*v[b],g+=c[b]*N(v[b])}if(o/=a,(n=void 0===p.alpha?.05:p.alpha)<0||n>1)throw new RangeError(B("invalid argument. Option `alpha` must be a number in the range 0 to 1. Value: `%f`.",n));return m=a*N(o)-g,d=1-D(m/=1+(e-1/a)/(3*(s-1)),f=s-1),R(j={},"rejected",d<=n),R(j,"alpha",n),R(j,"pValue",d),R(j,"statistic",m),R(j,"df",f),R(j,"method","Bartlett's test of equal variances"),R(j,"print",C),j};export{G as default};
//# sourceMappingURL=index.mjs.map
