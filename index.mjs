// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.2-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@v0.2.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-group@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@v0.2.4-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.2.2-esm/index.mjs";import{isPrimitive as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.2.2-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.2.2-esm/index.mjs";import{isPrimitive as j}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.2.2-esm/index.mjs";function c(s){var t,e,i,r,n,o;for(t=0,e=0,r=0,i=s.length,n=0;n<i;n++)r+=(t=(o=s[n])-e)*(o-(e+=t/(n+1)));return r/(n-1)}function v(s){var e,i,n;if(i=4,e=!0,arguments.length>0){if(!t(s))throw new TypeError(r("0th3L",s));if(p(s,"digits")){if(!m(s.digits))throw new TypeError(r("0th3P","digits",s.digits));i=s.digits}if(p(s,"decision")){if(!j(s.decision))throw new TypeError(r("0th2o","decision",s.decision));e=s.decision}}return n="",n+=this.method,n+="\n\n",n+="Null hypothesis: The variances in all groups are the same.",n+="\n\n",n+="    pValue: "+f(this.pValue,-i)+"\n",n+="    statistic: "+f(this.statistic,-i)+"\n",n+="    df: "+f(this.df,-i),n+="\n\n",e&&(n+="Test Decision: ",this.rejected?n+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":n+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",n+="\n"),n}function g(){var m,j,f,g,u,b,w,x,y,E,T,V,P,q,R,k,A,B,D,F;if(y=[],E={},t(arguments[(j=arguments.length)-1])&&(m=arguments[j-1],j-=1,q=function(s,e){return t(e)?p(e,"alpha")&&(s.alpha=e.alpha,!d(s.alpha)||a(s.alpha))?new TypeError(r("0th8P","alpha",s.alpha)):p(e,"groups")&&(s.groups=e.groups,!l(s.groups))?new TypeError(r("0th8Z","groups",s.groups)):null:new TypeError(r("0th2V",e))}(E,m),q))throw q;if(E.groups){if(u=o(arguments[0],E.groups),(j=(g=i(u)).length)<2)throw new Error(r("0th8W","groups",g));for(F=0;F<j;F++)y.push(u[g[F]])}else for(F=0;F<j;F++)y.push(arguments[F]);for(w=0,f=0,x=0,R=0,D=(B=new Array(j)).slice(),F=0;F<j;F++){if(P=y[F],!s(P))throw new TypeError(r("0th8X",P));if(0===P.length)throw new Error(r("0th8Y",P));B[F]=P.length-1,w+=B[F],f+=1/B[F],D[F]=c(P),x+=B[F]*D[F],R+=B[F]*h(D[F])}if(x/=w,(b=void 0===E.alpha?.05:E.alpha)<0||b>1)throw new RangeError(r("0th8V","alpha",b));return V=w*h(x)-R,T=1-n(V/=1+(f-1/w)/(3*(j-1)),A=j-1),e(k={},"rejected",T<=b),e(k,"alpha",b),e(k,"pValue",T),e(k,"statistic",V),e(k,"df",A),e(k,"method","Bartlett's test of equal variances"),e(k,"print",v),k}export{g as default};
//# sourceMappingURL=index.mjs.map
